===============================================================================
===============================================================================
Release Notes for the Microsoft .NET Micro Framework Porting Kit Version 4.3

This document details the system requirements, migration information, and 
known issues in the Porting Kit.
===============================================================================
===============================================================================


===============================================================================
System Requirements
===============================================================================
Microsoft Windows XP, Vista, Windows 7 or Windows 8

2 GB of free hard-disk space

Either Visual Studio 2012 (Express edition or greater) or both .NET 
Framework 3.5 and Windows SDK for Windows (downloadable from microsoft.com).

Compatible build tools for your processor. The following toolsets have been 
tested by Microsoft.
* ARM RealView 3.x,4.x
* Keil MDK 3.x
* GCC 4.2.1, 4.6.1 for ARM 
* VisualDSP++ 5.0 for Blackfin 


NOTE: The .NET Micro Framework SDK Version 4.3 does not support side-by-side 
installation with any other previous version of the same product. Please 
uninstall any previous versions before proceeding. Choose the appropriate 
target framework from the Application tab of your project properties to 
address legacy applications.


===============================================================================
Migrating from the V3.0 porting kit to the V4.0 porting kit and later
===============================================================================
If you are upgrading your HAL from version 3.0 to 4.3, you should be aware of 
the following differences:

1) Block Storage API: The block storage API has changed substantially. 

2) Time API: The Time API at the HAL level has a changed naming convention.  
   The functions to be implemented are now prefixed with 'HAL_Time_' and 
   'CPU_', and are located in the Time_decl.h header.

3) The SPI and LCD APIs have undergone marginal changes. 

For information about these topics, refer to the Porting Kit documentation.


===============================================================================
Migrating from the V4.0 porting kit to the V4.3 porting kit
===============================================================================
Please refer to the Porting Kit Documentation


===============================================================================
Known issues
===============================================================================

Interop: 
Parameter names for all marshaled parameters in native code are called 
param0, param1, param2, etc… instead of the identifier name used in the managed 
code. This is due to how the code is generated from the .PE file after the 
symbolic parameter names have already been stripped off.
When using the SDK through Visual Studio, interop stub generation settings and 
checksums are stored in the .csproj.user file. If you are using multiple 
development machines or a version control system in your development, you 
should share the .csproj.user file along with your source files.

Side-by-Side installation with previous versions:
Side-by-side installation and functionality are currently untested and
unsupported. 



===============================================================================
USB device with USB debugging:

If you are building an image with the debugger set to communicate over USB, the
USB_ALLOW_CONFIGURATION_OVERRIDE switch lets you control whether the C# 
developer can override the USB configuration. 

By default, when the debugger is set to USB, changes to the USB configuration 
(through MFDeploy) are ignored. This prevents accidental overwriting of USB
configuration settings. If you want to enable the user to modify the USB 
configuration using MFDeploy, define USB_ALLOW_CONFIGURATION_OVERRIDE in your 
platform_selector.h file.

===============================================================================
MDK Support:

When building with ARM Keil MDK, be sure to properly set the MDK_DEVICE_TYPE 
property. 
